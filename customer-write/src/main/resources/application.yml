# Common configuration for all profiles
spring:
  application:
    name: customer-write
  main:
    web-application-type: reactive

  # JDBC configuration for event store
  datasource:
    url: jdbc:postgresql://localhost:5432/customer_event_store
    username: customer_user
    password: customer_password
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      pool-name: CustomerWriteHikariPool

  # Flyway migration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Kafka configuration for event publishing
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      properties:
        delivery.timeout.ms: 120000
        request.timeout.ms: 30000
        retry.backoff.ms: 500

# Server settings
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful
  http2:
    enabled: true

# Monitoring and actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,loggers,env,beans
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
    tags:
      application: ${spring.application.name}
  tracing:
    enabled: true
    sampling:
      probability: 1.0

# Logging configuration
logging:
  level:
    root: INFO
    pl.ecommerce: INFO
    pl.ecommerce.customer.write: DEBUG
    org.springframework.jdbc: INFO
    org.springframework.kafka: INFO
    org.springframework.web.reactive: INFO

# Enable Swagger UI
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  api-docs:
    enabled: true

---
# Profile: dev
spring:
  config:
    activate:
      on-profile: dev

  # Kafka configuration for development
  kafka:
    bootstrap-servers: localhost:9092

# Logging configuration for dev
logging:
  level:
    pl.ecommerce.customer.write: DEBUG
    org.springframework.jdbc: DEBUG

server:
  port: 8081
---
# Profile: prod
spring:
  config:
    activate:
      on-profile: prod

  # Database configuration for production
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:customer_event_store}
    username: ${DB_USER:customer_user}
    password: ${DB_PASSWORD:customer_password}

  # Kafka configuration for production
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:kafka:9092}

# Logging configuration for production
logging:
  level:
    root: WARN
    pl.ecommerce.customer.write: INFO

# Disable Swagger UI for production
springdoc:
  swagger-ui:
    enabled: false
  api-docs:
    enabled: false