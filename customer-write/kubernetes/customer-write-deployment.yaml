apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-write
  labels:
    app: customer-write
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-write
  template:
    metadata:
      labels:
        app: customer-write
    spec:
      containers:
        - name: customer-write
          image: ${DOCKER_REGISTRY}/customer-write:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: customer-write-secrets
                  key: db-url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: customer-write-secrets
                  key: db-username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: customer-write-secrets
                  key: db-password
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: kafka-config
                  key: bootstrap-servers
            - name: LOGGING_ELASTICSEARCH_HOST
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-config
                  key: host
            - name: LOGGING_ELASTICSEARCH_PORT
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-config
                  key: port
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 15
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: customer-write-service
spec:
  selector:
    app: customer-write
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP