{{- if .Values.infrastructure.redis.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "infrastructure.fullname" . }}-redis
  labels:
    {{ include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  type: {{ .Values.infrastructure.redis.service.type | default "ClusterIP" }}
  ports:
    - port: {{ .Values.infrastructure.redis.service.port | default 6379 }}
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{ include "infrastructure.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infrastructure.fullname" . }}-redis
  labels:
    {{ include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ include "infrastructure.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{ include "infrastructure.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.infrastructure.redis.image.repository }}:{{ .Values.infrastructure.redis.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.infrastructure.redis.service.port | default 6379 }}
              name: redis
          args: {{ toYaml .Values.infrastructure.redis.command | nindent 12 }}
          resources:
            {{ toYaml .Values.infrastructure.redis.resources | nindent 12 }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "infrastructure.fullname" . }}-redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "infrastructure.fullname" . }}-redis
  labels:
    {{ include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.infrastructure.redis.persistence.size | default "5Gi" }}
  storageClassName: {{ .Values.global.storageClass | default "standard" }}
{{- end }}