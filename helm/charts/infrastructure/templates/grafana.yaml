{{- if .Values.infrastructure.grafana.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "infrastructure.fullname" . }}-{{ .Values.infrastructure.grafana.configMap.name }}
  labels:
    {{ include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
data:
  {{ toYaml .Values.infrastructure.grafana.configMap.data | nindent 2 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "infrastructure.fullname" . }}-grafana
  labels:
    {{ include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  type: {{ .Values.infrastructure.grafana.service.type }}
  ports:
    - port: {{ .Values.infrastructure.grafana.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{ include "infrastructure.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infrastructure.fullname" . }}-grafana
  labels:
    {{ include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ include "infrastructure.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{ include "infrastructure.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
      containers:
        - name: grafana
          image: "{{ .Values.infrastructure.grafana.image.repository }}:{{ .Values.infrastructure.grafana.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            {{- range .Values.infrastructure.grafana.environment }}
               - name: {{ .name }}
                 value: {{ .value | quote }}
                 {{- end }}
          volumeMounts:
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-storage
              mountPath: /var/lib/grafana
          resources:
            {{ toYaml .Values.infrastructure.grafana.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 30
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 30
            failureThreshold: 10
      volumes:
        - name: grafana-datasources
          configMap:
            name: {{ include "infrastructure.fullname" . }}-{{ .Values.infrastructure.grafana.configMap.name }}
  {{- if .Values.infrastructure.grafana.persistence.enabled }}
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: {{ include "infrastructure.fullname" . }}-grafana
  {{- else }}
        - name: grafana-storage
          emptyDir: {}
  {{- end }}
---
{{- if .Values.infrastructure.grafana.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "infrastructure.fullname" . }}-grafana
  labels:
    {{ include "infrastructure.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.infrastructure.grafana.persistence.size }}
{{- end }}
{{- end }}