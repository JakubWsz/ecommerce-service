name: CI
on:
  pull_request:
    branches: [ develop, master ]
  push:
    branches: [ develop, master ]

env:
  AWS_REGION: eu-central-1
  DOMAIN_NAME: ecommerce.pl

jobs:
  build:
    name: Build, Test & Push Images
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate version
        id: version
        run: |
          VERSION="${GITHUB_SHA::7}-$(date +%Y%m%d%H%M%S)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'maven'

      - name: Set up Docker network and configure Kafka
        run: |
          chmod +x .github/workflows/ci/setup-kafka.sh
          .github/workflows/ci/setup-kafka.sh

      - name: Build all modules
        run: mvn --batch-mode clean install -DskipTests

      - name: Run tests
        run: mvn --batch-mode test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create and configure ECR repositories
        run: |
          chmod +x .github/workflows/ci/configure-ecr.sh
          .github/workflows/ci/configure-ecr.sh

      - name: Build & Push images to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ steps.version.outputs.version }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          chmod +x .github/workflows/ci/build-and-push.sh
          .github/workflows/ci/build-and-push.sh

      - name: Scan images and check results
        if: github.event_name == 'pull_request'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          chmod +x .github/workflows/ci/scan-images.sh
          .github/workflows/ci/scan-images.sh

  infra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref_name == 'develop' || github.ref_name == 'master' || github.ref_name == 'test' }}
    env:
      STAGE: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
    outputs:
      ecr_registry: ${{ steps.login-ecr.outputs.registry }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'maven'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install AWS CDK
        run: npm install -g aws-cdk@2

      - name: Deploy AWS Infrastructure
        working-directory: ecommerce-cdk
        run: |
          mvn clean install
          cdk bootstrap
          cdk deploy --all --require-approval never \
            --context stage=${{ env.STAGE }} \
            --context account=${{ secrets.AWS_ACCOUNT_ID }}

      - name: Get EKS cluster config
        run: |
          aws eks update-kubeconfig \
            --name ecommerce-${{ env.STAGE }} \
            --region ${{ env.AWS_REGION }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Deploy Infrastructure with Helm
        working-directory: helm
        env:
          REPLICAS: ${{ env.STAGE == 'prod' && '3' || '1' }}
        run: |
          chmod +x ../.github/workflows/ci/deploy-helm-infrastructure.sh
          ../.github/workflows/ci/deploy-helm-infrastructure.sh

      - name: Save CDK outputs
        run: |
          chmod +x .github/workflows/ci/save-cdk-outputs.sh
          .github/workflows/ci/save-cdk-outputs.sh

  deploy-apps:
    name: Deploy Applications
    runs-on: ubuntu-latest
    needs: [ build, infra ]
    if: ${{ github.ref_name == 'develop' || github.ref_name == 'master' || github.ref_name == 'test'}}
    env:
      STAGE: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
      ECR_REGISTRY: ${{ needs.infra.outputs.ecr_registry }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ecommerce-${{ env.STAGE }} \
            --region ${{ env.AWS_REGION }}

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Install Argo CD CLI
        run: |
          chmod +x .github/workflows/ci/install-argocd.sh
          .github/workflows/ci/install-argocd.sh

      - name: Deploy Applications with Helm
        env:
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          chmod +x .github/workflows/ci/deploy-helm-apps.sh
          .github/workflows/ci/deploy-helm-apps.sh

      - name: Configure Argo CD for Helm
        env:
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          chmod +x .github/workflows/ci/configure-argocd-helm.sh
          .github/workflows/ci/configure-argocd-helm.sh

  test-deployment:
    name: Test Deployment
    runs-on: ubuntu-latest
    needs: deploy-apps
    if: ${{ github.ref_name == 'develop' || github.ref_name == 'master' || github.ref_name == 'test'}}
    env:
      STAGE: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ecommerce-${{ env.STAGE }} \
            --region ${{ env.AWS_REGION }}

      - name: Run smoke tests
        run: |
          chmod +x .github/workflows/ci/smoke-tests.sh
          .github/workflows/ci/smoke-tests.sh